version: "3.8"

services:

  etcd-node:
    image: quay.io/coreos/etcd:v3.5.0
    container_name: etcd-node
    restart: always
    ports:
      - "2379:2379"
    volumes:
      - ./deply/etcd/etcd-data:/etcd-data
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd-node:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    networks:
      - TikTok-net

  # etcd-node:
  #   image: quay.io/coreos/etcd:v3.5.0
  #   container_name: etcd-node
  #   command: etcd --config-file /etcd-conf/etcd.conf
  #   ports:
  #     - "2379:2379"
  #     - "2380:2380"
  #   volumes:
  #     - ./deply/etcd:/etcd-conf
  #     - ./deply/etcd/etcd-data:/etcd-data
  #   networks:
  #     - TikTok-net

  apisix:
    image: apache/apisix:${APISIX_IMAGE_TAG:-3.5.0-debian}
    container_name: apisix
    restart: always
    volumes:
      - ./deply/apisix/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd-node
    ##network_mode: host
    ports:
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
      - "9092:9092/tcp"
      - "80:80/tcp" #开启apisix 80 443端口映射
      - "443:443/tcp"
    networks:
      - TikTok-net

  dashboard:
    image: apache/apisix-dashboard:latest
    container_name: dashboard
    ports:
      - "3001:3001"
    volumes:
      - ./deply/dashboard/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    depends_on:
      - apisix
      - etcd-node
    links:
      - "apisix:apisix"
    networks:
      - TikTok-net

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686" # Jaeger UI port
      - "6831:6831/udp" # Jaeger compact Thrift port
      - "6832:6832/udp" # Jaeger binary Thrift port
    networks:
      - TikTok-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    restart: always
    volumes:
      - ./deply/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - TikTok-net

  # Grafana
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    networks:
      - TikTok-net

  # kafdrop:
  #   container_name: kafdrop
  #   image: obsidiandynamics/kafdrop
  #   restart: "no"
  #   ports:
  #     - "9000:9000"
  #   environment:
  #     KAFKA_BROKERCONNECT: "kafka:29092"
  #     JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
  #   depends_on:
  #     - "kafka"
  #   networks:
  #     - TikTok-net
  # kafka:
  #   container_name: kafka
  #   image: obsidiandynamics/kafka
  #   restart: "no"
  #   ports:
  #     - "2181:2181"
  #     - "9092:9092"
  #   environment:
  #     KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
  #     KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://192.168.30.134:9092"
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
  #     KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
  #     KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
  #     KAFKA_RESTART_ATTEMPTS: "10"
  #     KAFKA_RESTART_DELAY: "5"
  #     ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
  #   networks:
  #     - TikTok-net

  # es:
  #   container_name: es
  #   image: elasticsearch:8.6.0
  #   volumes:
  #     - ./deply/es/data:/usr/share/elasticsearch/data
  #     - ./deply/es/logs:/usr/share/elasticsearch/logs
  #     - ./deply/es/plugins:/usr/share/elasticsearch/plugins #装 ik分词器
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   environment:
  #     - node.name=es
  #     - cluster.name=elasticsearch
  #     - discovery.type=single-node
  #     - bootstrap.memory_lock=true
  #     - xpack.security.enabled=false
  #     - xpack.security.http.ssl.enabled=false
  #     - xpack.security.transport.ssl.enabled=false
  #     - ES_JAVA_OPTS=-Xms512m -Xmx512m
  #     - TAKE_FILE_OWNERSHIP=true
  #   privileged: true
  #   networks:
  #     - TikTok-net

  # logstash:
  #   image: logstash:8.6.0
  #   container_name: logstash
  #   volumes:
  #     - ./deply/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #     - ./deply/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
  #     - ./deply/logstash/logstash/log/:/home/public/
  #   ports:
  #     - '5044:5044'
  #     - '50000:50000/tcp'
  #     - '50000:50000/udp'
  #     - '9600:9600'
  #   environment:
  #     LS_JAVA_OPTS: -Xms1024m -Xmx1024m
  #     TZ: Asia/Shanghai
  #     MONITORING_ENABLED: false
  #   depends_on:
  #     - es
  #   networks:
  #     - TikTok-net

  # kibana:
  #   image: kibana:8.6.0
  #   container_name: kibana
  #   depends_on:
  #     - es
  #   environment:
  #     SERVER_NAME: kibana
  #     SERVER_HOST: "0.0.0.0"
  #     ELASTICSEARCH_HOSTS: http://es:9200
  #   ports:
  #     - "5601:5601"
  #   networks:
  #     - TikTok-net

  mysql:
    container_name: mysql
    image: mysql:latest
    ports:
      - "3309:3306"
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - ./deply/mysql/data:/var/lib/mysql
      - ./deply/mysql/conf:/etc/mysql/conf.d/
      - ./deply/mysql/logs:/logs
      - ./deply/mysql:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci --explicit_defaults_for_timestamp=true --lower_case_table_names=1
    networks:
      - TikTok-net

  Redis:
    container_name: redis
    image: redis:6.2.7
    restart: always
    volumes:
      - ./deply/redis/data:/data
      - ./deply/redis/redis.conf:/etc/redis/redis.conf
    ports:
      - "6379:6379"
    command: redis-server /etc/redis/redis.conf
    networks:
      - TikTok-net

networks:
  TikTok-net:
    driver: bridge
