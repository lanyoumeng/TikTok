syntax = "proto3";

package message.api.message.v1;

option go_package = "/message/api/message/v1;v1";

service MessageService {
	rpc MessageRecord (douyin_message_record_request) returns (douyin_message_record_response);
	rpc MessageSend (douyin_message_send_request) returns (douyin_message_send_response);

  //  string message = 2; // 和该好友的最新聊天消息
  //  int64 msgType = 3; // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
  //获得用户和每个好友的最新一条消息
  rpc GetNewMessages (GetNewMessages_request) returns (GetNewMessages_response);


}

message Message {
  int64 id = 1; // 消息id
  int64 to_user_id = 2; // 该消息接收者的id
  int64 from_user_id =3; // 该消息发送者的id
  string content = 4; // 消息内容
  string create_time = 5; // 消息创建时间
}

message  LatestMessage {
  string content = 1; // 消息内容
  int64 msgType = 2; // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
  int64 friend_id = 4; // 好友的id
}

message douyin_message_record_request {
 string token = 1; // 用户鉴权token
  int64 to_user_id = 2; // 对方用户id
   int64 pre_msg_time=3;//上次最新消息的时间（新增字段-apk更新中）
}

message douyin_message_record_response {
   int32 status_code = 1; // 状态码，0-成功，其他值-失败
   string status_msg = 2; // 返回状态描述
  repeated Message message_list = 3; // 消息列表
}

message douyin_message_send_request {
   string token = 1; // 用户鉴权token
   int64 to_user_id = 2; // 对方用户id
   int32 send_type = 3; // 1-发送消息
  string content = 4; // 消息内容
}

message douyin_message_send_response {
   int32 status_code = 1; // 状态码，0-成功，其他值-失败
   string status_msg = 2; // 返回状态描述
}

message GetNewMessages_request {
  string user_id = 1; // 用户id
  repeated  int64 to_user_id = 2; // 好友id

}

message GetNewMessages_response {

  repeated LatestMessage latestMessageList = 1; // 消息列表
}