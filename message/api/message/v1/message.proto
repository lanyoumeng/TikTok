syntax = "proto3";

package message.api.message.v1;

option go_package = "/message/api/message/v1;v1";
import "google/api/annotations.proto";

service MessageService {
  // 获取历史消息记录
  rpc MessageRecord (douyin_message_record_request) returns (douyin_message_record_response) {
    option (google.api.http) = {
      get: "/douyin/message/chat"
    };
  }

  // 发送消息
  rpc MessageSend (douyin_message_send_request) returns (douyin_message_send_response) {
    option (google.api.http) = {
      post: "/douyin/message/action"
      body: "*"
    };
  }

  // 获取用户和每个好友的最新一条消息
  rpc GetNewMessages (GetNewMessages_request) returns (GetNewMessages_response) {
    option (google.api.http) = {
      get: "/douyin/message/latest"
    };
  }
}

message Message {
  int64 id = 1 [json_name = "id"]; // 消息id
  int64 to_user_id = 2 [json_name = "to_user_id"]; // 该消息接收者的id
  int64 from_user_id = 3 [json_name = "from_user_id"]; // 该消息发送者的id
  string content = 4 [json_name = "content"]; // 消息内容
  string create_time = 5 [json_name = "create_time"]; // 消息创建时间
}

message LatestMessage {
  string content = 1; // 消息内容
  int64 msgType = 2; // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
  int64 friend_id = 4; // 好友的id
}

message douyin_message_record_request {
  string token = 1; // 用户鉴权token
  int64 to_user_id = 2; // 对方用户id
  int64 pre_msg_time = 3; // 上次最新消息的时间（新增字段-apk更新中）
}

message douyin_message_record_response {
  int32 status_code = 1 [json_name = "status_code"]; // 状态码，0-成功，其他值-失败
  string status_msg = 2 [json_name = "status_msg"]; // 返回状态描述
  repeated Message message_list = 3 [json_name = "message_list"]; // 消息列表
}

message douyin_message_send_request {
  string token = 1; // 用户鉴权token
  int64 to_user_id = 2; // 对方用户id
  int32 send_type = 3; // 1-发送消息
  string content = 4; // 消息内容
}

message douyin_message_send_response {
  int32 status_code = 1  [json_name = "status_code"]; // 状态码，0-成功，其他值-失败
  string status_msg = 2 [json_name = "status_msg"]; // 返回状态描述
}

message GetNewMessages_request {
  string user_id = 1; // 用户id
  repeated int64 to_user_id = 2; // 好友id
}

message GetNewMessages_response {
  repeated LatestMessage latestMessageList = 1; // 消息列表
}
